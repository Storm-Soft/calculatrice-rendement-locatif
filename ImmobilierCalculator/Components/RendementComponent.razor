@using System.Threading;
@using ImmobilierCalculator.Application.ValueObjects
@using Radzen

<div class="row">
    <RadzenArcGauge Style="height:200px">
        <RadzenArcGaugeScale Step="0.5" Min="0" Max="@valeurMax" MinorStep="0.5" Radius="1.5" TickPosition="GaugeTickPosition.Inside" Y="0.9" Margin="0">
            <RadzenArcGaugeScaleValue Value=@valeur ShowValue=true Fill="@evaluation">
                <Template Context="pointer">
                    <h2>@pointer.Value</h2>
                </Template>
            </RadzenArcGaugeScaleValue>
        </RadzenArcGaugeScale>
    </RadzenArcGauge>
</div>
@code {
    private double valeur;
    private double valeurMax;
    private string evaluation;

    [Parameter]
    public Rendement Rendement
    {
        get => new Rendement((decimal)valeur);
        set => UpdateRendement(value);
    }

    [Parameter]
    public Rendement RendementMaximum
    {  
        get => new Rendement((decimal)valeur);
        set => valeurMax = decimal.ToDouble(value.Valeur);
    }

    [Parameter] public EventCallback<Rendement> RendementChanged { get; set; }
    [Parameter] public EventCallback<Rendement> RendementMaximumChanged { get; set; }

    void UpdateRendement(Rendement value)
    {
        valeur = decimal.ToDouble(Math.Round(value.Valeur, 2));
        if (valeur < 3d)
            evaluation = "red";
        else if (valeur < 5d)
            evaluation = "orange";
        else if (valeur < 7d)
            evaluation = "yellow";
        else evaluation = "green";
        StateHasChanged();
    }
}